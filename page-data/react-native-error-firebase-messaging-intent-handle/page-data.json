{
    "componentChunkName": "component---gatsby-theme-code-notes-src-templates-note-js",
    "path": "/react-native-error-firebase-messaging-intent-handle/",
    "result": {"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"emoji\": \"üíª\",\n  \"title\": \"[React Native] FATAL EXCEPTION: Firebase-Messaging-Intent-Handle\",\n  \"created\": \"2022-09-28T00:00:00.000Z\",\n  \"modified\": \"2022-09-28T00:00:00.000Z\",\n  \"link\": \"\",\n  \"tags\": [\"React Native\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"br\", null), mdx(\"p\", null, \"TargetSdkVersion 31(Android 12)\\uB85C \\uC5C5\\uB370\\uC774\\uD2B8\\uD55C \\uD6C4 Android\\uC571\\uC5D0\\uC11C PUSH\\uB97C \\uBC1B\\uC9C0 \\uBABB\\uD568\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h1\", {\n    \"id\": \"‚ùê-error-Î°úÍ∑∏\"\n  }, mdx(\"strong\", {\n    parentName: \"h1\"\n  }, \"\\u2750 Error \\uB85C\\uADF8\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-undefined\",\n    \"metastring\": \"isWrap\",\n    \"isWrap\": true\n  }), \"FATAL EXCEPTION: Firebase-Messaging-Intent-Handle\\nProcess: com.sohee.rnstudy, PID: 5845\\njava.lang.IllegalArgumentException: com.sohee.rnstudy: Targeting S+ (version 31 and above) requires that one of FLAG_IMMUTABLE or FLAG_MUTABLE be specified when creating a PendingIntent.\\nStrongly consider using FLAG_IMMUTABLE, only use FLAG_MUTABLE if some functionality depends on the PendingIntent being mutable, e.g. if it needs to be used with inline replies or bubbles.\\nat android.app.PendingIntent.checkFlags(PendingIntent.java:375)\\nat android.app.PendingIntent.getActivityAsUser(PendingIntent.java:458)\\nat android.app.PendingIntent.getActivity(PendingIntent.java:444)\\nat android.app.PendingIntent.getActivity(PendingIntent.java:408)\\n(\\uC0DD\\uB7B5...)\\n\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h1\", {\n    \"id\": \"‚ùê-ÏõêÏù∏\"\n  }, mdx(\"strong\", {\n    parentName: \"h1\"\n  }, \"\\u2750 \\uC6D0\\uC778\")), mdx(\"p\", null, \"Android 12\\uB97C \\uD0C0\\uAC9F\\uD305\\uD558\\uBA74 \\uBCC0\\uACBD\\uB418\\uB294 \\uB3D9\\uC791 \\uC911 \\uC544\\uB798 \\uB3D9\\uC791 \\uBCC0\\uACBD\\uC0AC\\uD56D\\uC774 \\uB300\\uC751\\uB418\\uC9C0 \\uC54A\\uC544 \\uBC1C\\uC0DD\\uD55C \\uC774\\uC288\\uC785\\uB2C8\\uB2E4.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\uB300\\uAE30 \\uC911\\uC778 \\uC778\\uD150\\uD2B8 \\uBCC0\\uACBD \\uAC00\\uB2A5 \\uC5EC\\uBD80\\n\\uC571\\uC774 Android 12\\uB97C \\uD0C0\\uAC9F\\uD305\\uD558\\uB294 \\uACBD\\uC6B0 \\uC571\\uC5D0\\uC11C \\uB9CC\\uB4DC\\uB294 \\uAC01 PendingIntent \\uAC1D\\uCCB4\\uC758 \\uBCC0\\uACBD \\uAC00\\uB2A5 \\uC5EC\\uBD80\\uB97C \\uC9C0\\uC815\\uD574\\uC57C \\uD569\\uB2C8\\uB2E4.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\uC774 \\uCD94\\uAC00 \\uC694\\uAD6C\\uC0AC\\uD56D\\uC740 \\uC571\\uC758 \\uBCF4\\uC548\\uC744 \\uAC15\\uD654\\uD569\\uB2C8\\uB2E4.  \")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Android 12\\uB97C \\uD0C0\\uAC9F\\uD305\\uD558\\uB294 \\uC571 \\uB3D9\\uC791 \\uBCC0\\uACBD\\uC0AC\\uD56D : \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.android.com/about/versions/12/behavior-changes-12?hl=ko\"\n  }), \"developer.android.com/ab...=ko\"))), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h1\", {\n    \"id\": \"‚ùê-Ìï¥Í≤∞Î∞©Î≤ï\"\n  }, mdx(\"strong\", {\n    parentName: \"h1\"\n  }, \"\\u2750 \\uD574\\uACB0\\uBC29\\uBC95\")), mdx(\"p\", null, \"\\uC704\\uC758 \\uB3D9\\uC791 \\uBCC0\\uACBD\\uC0AC\\uD56D\\uC744 \\uB300\\uC751\\uD55C firebase \\uB77C\\uC774\\uBE0C\\uB7EC\\uB9AC \\uBC84\\uC804(14.11.1 \\uC774\\uC0C1)\\uC73C\\uB85C \\uC5C5\\uB370\\uC774\\uD2B8 \\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-undefined\",\n    \"metastring\": \"addLine={4,5} removeLine={2,3}\",\n    \"addLine\": \"{4,5}\",\n    \"removeLine\": \"{2,3}\"\n  }), \"  \\\"dependencies\\\": {\\n    \\\"@react-native-firebase/app\\\": \\\"^11.3.3\\\",\\n    \\\"@react-native-firebase/messaging\\\": \\\"^11.3.3\\\",\\n    \\\"@react-native-firebase/app\\\": \\\"^14.11.1\\\",\\n    \\\"@react-native-firebase/messaging\\\": \\\"^14.11.1\\\",\\n\")), mdx(\"br\", null), mdx(\"br\", null));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"[React Native] FATAL EXCEPTION: Firebase-Messaging-Intent-Handle","tags":["React Native"],"emoji":"üíª","link":"","modified":"September 28, 2022","modifiedTimestamp":"2022-09-28T00:00:00.000Z"},"references":[],"fields":{"slug":"/react-native-error-firebase-messaging-intent-handle"},"tableOfContents":{"items":[{"url":"#‚ùê-error-Î°úÍ∑∏","title":"‚ùê Error Î°úÍ∑∏"},{"url":"#‚ùê-ÏõêÏù∏","title":"‚ùê ÏõêÏù∏"},{"url":"#‚ùê-Ìï¥Í≤∞Î∞©Î≤ï","title":"‚ùê Ìï¥Í≤∞Î∞©Î≤ï"}]},"parent":{"relativePath":"react-native-error-firebase-messaging-intent-handle.md"}}},"pageContext":{"id":"30cc807b-caad-51ca-9427-9b5e8d73f5df","previous":{"id":"72d3cb86-6038-5fa1-b24c-7d7bb8c9a073","frontmatter":{"title":"[React Native] error listen EADDRINUSE: address already in use :::8081.","tags":["React Native"]},"fields":{"slug":"/react-native-error-listen-eaddrinuse"}},"next":{"id":"aef6308a-d002-5992-8b59-21d8eccf5127","frontmatter":{"title":"[React Native] Error: Element type is invalid","tags":["React Native"]},"fields":{"slug":"/react-native-error-element-type-is-invalid"}},"hasUntagged":false,"basePath":"/","tags":[{"tag":"DB","totalCount":1,"slug":"/db/","path":"/tag/db/"},{"tag":"Etc","totalCount":4,"slug":"/etc/","path":"/tag/etc/"},{"tag":"Infra","totalCount":16,"slug":"/infra/","path":"/tag/infra/"},{"tag":"Java","totalCount":1,"slug":"/java/","path":"/tag/java/"},{"tag":"Javascript","totalCount":3,"slug":"/javascript/","path":"/tag/javascript/"},{"tag":"React","totalCount":6,"slug":"/react/","path":"/tag/react/"},{"tag":"React Native","totalCount":54,"slug":"/react-native/","path":"/tag/react-native/"}]}},
    "staticQueryHashes": ["2744905544","460306843","467212769"]}